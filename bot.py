from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CallbackQueryHandler, ContextTypes, CommandHandler
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–µ—Ä–≤—ã–π —ç–∫—Ä–∞–Ω –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
ADVANTAGES_1 = """
üìò <b>–í–Ω—É—Ç—Ä–∏ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å:</b>

1Ô∏è‚É£ <b>–°–∂–∞—Ç—ã–µ –≤—ã–∂–∏–º–∫–∏ –ø–æ –ë–∞—Ñ—Ñ–µ—Ç—Ç—É, –õ–∏–Ω—á—É –∏ –ì—Ä—ç–º—É</b> ‚Äî —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–æ–µ, –Ω–∏–∫–∞–∫–∏—Ö —Ç–µ–æ—Ä–∏–π —Ä–∞–¥–∏ —Ç–µ–æ—Ä–∏–π. –£–¥–æ–±–Ω–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –∏ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.

2Ô∏è‚É£ <b>–ú–æ—é –∞–≤—Ç–æ—Ä—Å–∫—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞ 2025+</b> ‚Äî –∫–∞–∫ —è –ø—Ä–∏–º–µ–Ω—è—é –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å—Ç–æ–∏–º–æ—Å—Ç–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ (—Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –≤—ã–≤–æ–¥–∞–º–∏).

3Ô∏è‚É£ <b>–ë–æ–Ω—É—Å ‚Äî –º–æ—è –ª–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è:</b> –≤–º–µ—Å—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥–±–µ—Ä—ë–º —à–∞–≥–∏ –ø–æ–¥ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∏ —Ü–µ–ª–∏.
"""

# –í—Ç–æ—Ä–æ–π —ç–∫—Ä–∞–Ω ‚Äî –≤—ã–≥–æ–¥—ã, –≥–∞—Ä–∞–Ω—Ç–∏—è, —Ü–µ–Ω–∞
ADVANTAGES_2 = """
‚è≥ <b>–≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏</b> ‚Äî –≤–º–µ—Å—Ç–æ 100+ —á–∞—Å–æ–≤ —á—Ç–µ–Ω–∏—è  
üí∏ <b>–≠–∫–æ–Ω–æ–º–∏—è –¥–µ–Ω–µ–≥</b> ‚Äî –∑–Ω–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤–∂–∏–≤—É—é —Å—Ç–æ–∏–ª–∏ –±—ã —Ç–µ–±–µ –æ—Ç $250‚Äì$1000  
üìÇ <b>–§–∞–π–ª—ã –æ—Å—Ç–∞–Ω—É—Ç—Å—è —É —Ç–µ–±—è –Ω–∞–≤—Å–µ–≥–¥–∞</b>

üîí <b>–ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞</b>  
–ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Ç—ã –ø–æ—Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ –æ–Ω–∏ —Ç–µ–±–µ –Ω–µ –ø–æ–º–æ–≥–ª–∏ ‚Äî —è –≤–µ—Ä–Ω—É –¥–µ–Ω—å–≥–∏, –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤.

üéØ <b>–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø</b> ‚Äî 4800‚ÇΩ –∏–ª–∏ 50 USDT
"""

TG_LINK = "https://t.me/invest_er"

async def initial_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π"""
    keyboard = [[InlineKeyboardButton("üëâ START", callback_data="start")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    try:
        await update.message.reply_text(
            text="üíº <b>Dollar by Dollar</b> ‚Äî –¥–æ—Å—Ç—É–ø –∫ –≤—ã–∂–∏–º–∫–µ –∏–∑ —Ç—Ä—ë—Ö –∫—É–ª—å—Ç–æ–≤—ã—Ö –∫–Ω–∏–≥ –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–Ω–æ–º—É –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.\n–°–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö –±–µ–∑ –≤–æ–¥—ã –∏ –ª–∏—à–Ω–∏—Ö —Ç—Ä–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.",
            reply_markup=reply_markup,
            parse_mode="HTML"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –ü–µ—Ä–≤—ã–π —à–∞–≥ ‚Äî –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è START
async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    
    try:
        await query.answer()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ callback (start): {e}")
        return
    
    keyboard = [[InlineKeyboardButton("üëâ –°–ª–µ–¥—É—é—â–µ–µ", callback_data="next")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    try:
        await query.edit_message_text(
            text=ADVANTAGES_1,
            reply_markup=reply_markup,
            parse_mode="HTML"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (start): {e}")
        # Fallback: –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text=ADVANTAGES_1,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –í—Ç–æ—Ä–æ–π —à–∞–≥ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ + –∫–Ω–æ–ø–∫—É
async def next_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    
    try:
        await query.answer()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ callback (next): {e}")
        return
    
    keyboard = [[InlineKeyboardButton("üëâ –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø", url=TG_LINK)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    try:
        await query.edit_message_text(
            text=ADVANTAGES_2,
            reply_markup=reply_markup,
            parse_mode="HTML",
            disable_web_page_preview=True
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (next): {e}")
        # Fallback: –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text=ADVANTAGES_2,
                reply_markup=reply_markup,
                parse_mode="HTML",
                disable_web_page_preview=True
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    if not os.getenv("BOT_TOKEN"):
        raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")

    app = ApplicationBuilder().token(os.getenv("BOT_TOKEN")).build()
    
    # –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    app.add_handler(CommandHandler("start", initial_start))
    app.add_handler(CallbackQueryHandler(start_handler, pattern="^start$"))
    app.add_handler(CallbackQueryHandler(next_handler, pattern="^next$"))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
